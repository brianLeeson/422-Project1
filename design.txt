project design - Brian's Notes

simple python(?) GUI. user preferences: weights, group size, etc
use google surveys to collect information from users. download results into a csv file
import and parse csv files and create student instances
group class has-a student.
apply some function to sort all students.
display sorted groups
allow user to move people from group to group. also to change settings and resort


how do we allow the end user to change survey questions? all Q'a after x are questions on a scale?

here's the core
gui: set weights, import csv, sorts, (changing weights, changing groups?)

risk: what if google forms doesn't do what we want it do to. GUI or algorithm could be a lot more work.

devide up the project. who does what
Amie: algorith

Brian: GUI

Jamie: Forms/Input

5 min presentation with slides

From Piazza:  
Essential things to communicate:  
What is the scope of the project?  
For example, one team might include an extensive web survey facility in their vision of the project, while another team might choose to work with Google polls, Survey Monkey, or a similar outside source.
What is the target for the four week development?  This may be less than the full scope of the project as you envision it, but it should be something with actual utility (an M.V.P., or 'minimal viable product'). It is good to have a long term vision and a short term plan, with a rationale for how the M.V.P. could grow into the longer term vision for the product.  
What are the intermediate targets?  
Make these very concrete --- things you can build and test, even if they are very small.  The target for week 4 is your MVP.  What are the targets for weeks 2 (this coming week) and week 3?   They should be targets that are good at either giving you confidence that you will hit your week 4 target, or give you valuable feedback on how you need to re-scope or re-think your project. 
What is the architectural design of your system?  
This is actually woven into the prior questions, because the architectural design (overall breakdown into parts) is essential to building up incrementally.  Each major part may come in versions:  The version needed to hit the week 1 target, the version needed to hit the week 2 target, etc.   

Think of your presentation as an argument:  We can produce a useful (though very limited) product in 3 weeks (because week 1 is already gone), and this is how. 
